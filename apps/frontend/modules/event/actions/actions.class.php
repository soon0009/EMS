<?php
// auto-generated by sfPropelCrud
// date: 2009/05/28 15:55:08
?>
<?php

/**
 * event actions.
 *
 * @package    ems
 * @subpackage event
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class eventActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('event', 'list');
  }

  public function executeList()
  {
    $this->events = EventPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $c = new Criteria();
    $c->add(EventPeer::SLUG, $this->getRequestParameter('slug'));
    $this->event = EventPeer::doSelectOne($c);
    $this->forward404Unless($this->event);
  }

  public function executeCreate()
  {
    $this->event = new Event();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    if ($this->getRequest()->getMethod() != sfRequest::POST) {
      if (!$this->getRequestParameter('slug')) {
        $this->event = new Event();
        $this->forward404Unless($this->event);
      }
      else {
        $c = new Criteria();
        $c->add(EventPeer::SLUG, $this->getRequestParameter('slug'));
        $this->event = EventPeer::doSelectOne($c);
        $this->forward404Unless($this->event);
      }
    }
    else {
      if (!$this->getRequestParameter('id'))
      {
        $event = new Event();
      }
      else
      {
        $event = EventPeer::retrieveByPk($this->getRequestParameter('id'));
        $this->forward404Unless($event);
      }
  
      $event->setId($this->getRequestParameter('id'));
      $event->setTitle($this->getRequestParameter('title'));
      $event->setStatusId($this->getRequestParameter('status_id') ? $this->getRequestParameter('status_id') : null);
      $event->setPublished($this->getRequestParameter('published', 0));
      $event->setDescription($this->getRequestParameter('description'));
      $event->setNotes($this->getRequestParameter('notes'));
      $event->setImageUrl($this->getRequestParameter('image_url'));
      $event->setOrganiser($this->getRequestParameter('organiser'));
      $event->setInterestedParties($this->getRequestParameter('interested_parties'));
  
      $event->save();
  
      return $this->redirect('@show_event?slug='.$event->getSlug());
    }
    return sfView::SUCCESS;
  }

  public function executeDelete()
  {
    $event = EventPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($event);

    $event->delete();

    return $this->redirect('event/list');
  }

  public function handleErrorEdit() {
    $this->event = new Event;
    return sfView::SUCCESS;
  }

}
