propel:
  _attributes: { noXsd: false, defaultIdMethod: none, package: lib.model }

  event:
    _attributes:        { phpName: Event, idMethod: native }
    id:                 { type: integer, required: true, primaryKey: true, autoIncrement: true }
    title:              { type: varchar(255), required: true }
    slug:               { type: varchar(255) }
    status_id:          { type: integer, foreignTable: status, foreignReference: id }
    category_id:        { type: integer, foreignTable: category, foreignReference: id }
    published:          { type: boolean, required: true, default: false }
    description:        { type: longvarchar }
    notes:              { type: longvarchar }
    image_url:          { type: varchar(255) }
    organiser:          { type: longvarchar }
    interested_parties: { type: longvarchar }
    updated_at:         ~
    _uniques: { unique_slug: [slug] }

  status:
    _attributes: { phpName: Status, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    status:      { type: varchar(16) }

  category:
    _attributes: { phpName: Category, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    name:        { type: varchar(32) }

  etime: 
    _attributes:        { phpName: Etime, idMethod: native }
    id:                 { type: integer, required: true, primaryKey: true, autoIncrement: true }
    event_id:           { type: integer, foreignTable: event, foreignReference: id, required: true, onDelete: cascade }
    title:              { type: varchar(255) }
    start_date:         { type: timestamp, required: true }
    end_date:           { type: timestamp, required: true }
    all_day:            { type: boolean, required: true, default: false }
    location:           { type: longvarchar }
    description:        { type: longvarchar }
    notes:              { type: longvarchar }
    capacity:           { type: integer }
    has_fee:            { type: boolean, required: true, default: false }
    organiser:          { type: longvarchar }
    interested_parties: { type: longvarchar }
    updated_at:         ~

  audience:
    _attributes: { phpName: Audience, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    name:        { type: varchar(50) }

  etime_audience_key:
    _attributes: { phpName: EtimeAudience, idMethod: native }
    etime_id:    { type: integer, foreignTable: etime, foreignReference: id, primaryKey: true, onDelete: cascade }
    audience_id: { type: integer, foreignTable: audience, foreignReference: id, primaryKey: true }

  rsvp:
    _attributes: { phpName: Rsvp, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    name:        { type: varchar(50) }

  etime_rsvp_key:
    _attributes: { phpName: EtimeRsvp, idMethod: native }
    etime_id:    { type: integer, foreignTable: etime, foreignReference: id, primaryKey: true, onDelete: cascade }
    rsvp_id:     { type: integer, foreignTable: rsvp, foreignReference: id, primaryKey: true }

  tag:
    _attributes:    { phpName: Tag, idMethod: native }
    id:             { type: integer, required: true, primaryKey: true, autoIncrement: true }
    tag:            { type: varchar(100), required: true }
    normalized_tag: { type: varchar(100), index: true }
    created_at:     ~
    _uniques:       { unique_normalized_tag: [normalized_tag] }
  
  event_tag:
    _attributes: { phpName: EventTag, idMethod: native }
    event_id:    { type: integer, foreignTable: event, foreignReference: id, primaryKey: true, onDelete: cascade }
    tag_id:      { type: integer, foreignTable: tag, foreignReference: id, primaryKey: true, onDelete: cascade }

  etime_tag:
    _attributes: { phpName: EtimeTag, idMethod: native }
    etime_id:    { type: integer, foreignTable: etime, foreignReference: id, primaryKey: true, onDelete: cascade }
    tag_id:      { type: integer, foreignTable: tag, foreignReference: id, primaryKey: true, onDelete: cascade }
