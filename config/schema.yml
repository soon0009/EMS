propel:
  _attributes: { noXsd: false, defaultIdMethod: none, package: lib.model }

  event:
    _attributes:        { phpName: Event, idMethod: native }
    id:                 { type: integer, required: true, primaryKey: true, autoIncrement: true }
    title:              { type: varchar(255), required: true }
    slug:               { type: varchar(255) }
    status_id:          { type: integer, foreignTable: status, foreignReference: id }
    category_id:        { type: integer, foreignTable: category, foreignReference: id }
    published:          { type: boolean, required: true, default: false }
    media_potential:    { type: boolean, required: true, default: false }
    description:        { type: longvarchar }
    notes:              { type: longvarchar }
    image_url:          { type: varchar(255) }
    updated_at:         ~
    _uniques: { unique_slug: [slug] }

  status:
    _attributes: { phpName: Status, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    status:      { type: varchar(16) }

  category:
    _attributes: { phpName: Category, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    name:        { type: varchar(32) }

  event_people:
    _attributes:    { phpName: EventPeople, idMethod: native }
    id:             { type: integer, required: true, primaryKey: true, autoIncrement: true }
    event_id:       { type: integer, foreignTable: event, foreignReference: id, required: true, onDelete: cascade }
    name:           { type: varchar(100) }
    email:          { type: varchar(100) }
    phone:          { type: varchar(100) }
    person_type_id: { type: integer, foreignTable: person_type, foreignReference: id }

  person_type:
    _attributes: { phpName: PersonType, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    name:        { type: varchar(100) }

  etime: 
    _attributes:          { phpName: Etime, idMethod: native }
    id:                   { type: integer, required: true, primaryKey: true, autoIncrement: true }
    event_id:             { type: integer, foreignTable: event, foreignReference: id, required: true, onDelete: cascade }
    title:                { type: varchar(255) }
    start_date:           { type: timestamp, required: true }
    end_date:             { type: timestamp, required: true }
    all_day:              { type: boolean, required: true, default: false }
    location:             { type: longvarchar }
    description:          { type: longvarchar }
    notes:                { type: longvarchar }
    capacity:             { type: integer }
    additional_guests:    { type: integer, required: true, default: 0 }
    has_fee:              { type: boolean, required: true, default: false }
    audio_visual_support: { type: boolean, required: true, default: false }
    updated_at:           ~

  etime_people:
    _attributes:    { phpName: EtimePeople, idMethod: native }
    id:             { type: integer, required: true, primaryKey: true, autoIncrement: true }
    etime_id:       { type: integer, foreignTable: etime, foreignReference: id, required: true, onDelete: cascade }
    name:           { type: varchar(100) }
    email:          { type: varchar(100) }
    phone:          { type: varchar(100) }
    person_type_id: { type: integer, foreignTable: person_type, foreignReference: id }

  audience:
    _attributes: { phpName: Audience, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    name:        { type: varchar(50) }

  etime_audience_key:
    _attributes: { phpName: EtimeAudience, idMethod: native }
    etime_id:    { type: integer, foreignTable: etime, foreignReference: id, primaryKey: true, onDelete: cascade }
    audience_id: { type: integer, foreignTable: audience, foreignReference: id, primaryKey: true }

  rsvp:
    _attributes: { phpName: Rsvp, idMethod: native }
    id:          { type: integer, required: true, primaryKey: true, autoIncrement: true }
    name:        { type: varchar(50) }

  etime_rsvp_key:
    _attributes: { phpName: EtimeRsvp, idMethod: native }
    etime_id:    { type: integer, foreignTable: etime, foreignReference: id, primaryKey: true, onDelete: cascade }
    rsvp_id:     { type: integer, foreignTable: rsvp, foreignReference: id, primaryKey: true }

  tag:
    _attributes:    { phpName: Tag, idMethod: native }
    id:             { type: integer, required: true, primaryKey: true, autoIncrement: true }
    tag:            { type: varchar(100), required: true }
    normalized_tag: { type: varchar(100), index: true }
    created_at:     ~
    _uniques:       { unique_normalized_tag: [normalized_tag] }
  
  event_tag:
    _attributes: { phpName: EventTag, idMethod: native }
    event_id:    { type: integer, foreignTable: event, foreignReference: id, primaryKey: true, onDelete: cascade }
    tag_id:      { type: integer, foreignTable: tag, foreignReference: id, primaryKey: true, onDelete: cascade }

  etime_tag:
    _attributes: { phpName: EtimeTag, idMethod: native }
    etime_id:    { type: integer, foreignTable: etime, foreignReference: id, primaryKey: true, onDelete: cascade }
    tag_id:      { type: integer, foreignTable: tag, foreignReference: id, primaryKey: true, onDelete: cascade }

  guest:
    _attributes:                { phpName: Guest, idMethod: native }
    etime_id:                   { type: integer, foreignTable: etime, foreignReference: id, onDelete: cascade }
    attending:                  { type: boolean, required: true, default: false }
    paid:                       { type: boolean, default: false }
    reg_date:                   { type: timestamp }
    extra_info:                 { type: longvarchar }
    created_at:                 ~
    updated_at:                 ~
    title:                      { type: varchar(50) }
    firstname:                  { type: varchar(100) }
    lastname:                   { type: varchar(100) }
    preferred_name:             { type: varchar(100) }
    email:                      { type: varchar(100) }
    phone:                      { type: varchar(100) }
    mobile:                     { type: varchar(100) }
    primary_address_line_1:     { type: varchar(100) }
    primary_address_line_2:     { type: varchar(100) }
    primary_address_line_3:     { type: varchar(100) }
    primary_address_city:       { type: varchar(100) }
    primary_address_postcode:   { type: varchar(100) }
    primary_address_state:      { type: varchar(100) }
    primary_address_country:    { type: varchar(100) }
    secondary_address_line_1:   { type: varchar(100) }
    secondary_address_line_2:   { type: varchar(100) }
    secondary_address_line_3:   { type: varchar(100) }
    secondary_address_city:     { type: varchar(100) }
    secondary_address_postcode: { type: varchar(100) }
    secondary_address_state:    { type: varchar(100) }
    secondary_address_country:  { type: varchar(100) }
    special_req:                { type: longvarchar }
    position:                   { type: varchar(100) }
    company:                    { type: varchar(100) }
    srn:                        { type: varchar(100) }
    fan:                        { type: varchar(8) }
    aou:                        { type: varchar(100) }

  reg_field:
    _attributes: { phpName: RegField, idMethod: native }
    name:        { type: varchar(50), required: true }
    label:       { type: varchar(50), required: true }
    type:        { type: varchar(50), required: true }

  reg_form:
    _attributes:    { phpName: RegForm, idMethod: native }
    event_id:       { type: integer, foreignTable: event, foreignReference: id, primaryKey: true, onDelete: cascade }
    reg_field_id:   { type: integer, foreignTable: reg_field, foreignReference: id, primaryKey: true, onDelete: cascade }
    required_field: { type: boolean, required: true, default: false }
    field_order:    { type: integer }

  additional_guest:
    _attributes:     { phpName: AdditionalGuest, idMethod: native }
    parent_guest_id: { type: integer, foreignTable: guest, foreignReference: id, primaryKey: true, onDelete: cascade }
    child_guest_id:  { type: integer, foreignTable: guest, foreignReference: id, primaryKey: true, onDelete: cascade }
